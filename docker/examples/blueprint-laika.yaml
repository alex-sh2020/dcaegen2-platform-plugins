tosca_definitions_version: cloudify_dsl_1_3

description: >
  This Blueprint installs a chain of two laika instances on a Docker cluster

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - {{ ONAPTEMPLATE_RAWREPOURL_org_onap_dcaegen2 }}/type_files/docker/2.3.0/node-type.yaml
  - {{ ONAPTEMPLATE_RAWREPOURL_org_onap_dcaegen2 }}/type_files/relationship/1.0.0/node-type.yaml

inputs:

  service_id:
    description: Unique id used for an instance of this DCAE service. Use deployment id
    default: 'foobar'
  laika_image:
    type: string


node_templates:

  laika-zero:
    type: dcae.nodes.DockerContainerForComponents
    properties:
        service_component_type:
            'laika'
        service_id:
            { get_input: service_id }
        location_id:
            'rework-central'
        application_config:
            some-param: "Lorem ipsum dolor sit amet"
            downstream-laika: "{{ laika }}"
        image: { get_input : laika_image }
        docker_config:
            healthcheck:
                type: "http"
                endpoint: "/health"
    relationships:
      # Link to downstream laika
      - type: dcae.relationships.component_connected_to
        target: laika-one
      - type: dcae.relationships.component_contained_in
        target: docker_host
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          inputs:
            ports:
              - "8080:5432"
            envs:
              SOME-ENV: "BAM"
            max_wait:
              120
        stop:
          inputs:
            cleanup_image:
              False

  laika-one:
    type: dcae.nodes.DockerContainerForComponents
    properties:
        service_component_type:
            'laika'
        service_id:
            { get_input: service_id }
        location_id:
            'rework-central'
        application_config:
            some-param: "Lorem ipsum dolor sit amet"
        image: { get_input : laika_image }
        # Trying without health check
    relationships:
      - type: dcae.relationships.component_contained_in
        target: docker_host
    interfaces:
      cloudify.interfaces.lifecycle:
        stop:
          inputs:
            cleanup_image:
              False

  docker_host:
    type: dcae.nodes.SelectedDockerHost
    properties:
        location_id:
            'rework-central'
        docker_host_override:
            'platform_dockerhost'
